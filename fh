#!/bin/bash
# fh - The Frappe Helper script

# --- Colors ---
Color_Off='\033[0m'
BGreen='\033[1;32m'
BBlue='\033[1;34m'
Yellow='\033[0;33m'
Red='\033[1;31m'

# Get the directory of the script to ensure it runs from the project root
cd "$(dirname "${BASH_SOURCE[0]}")" || exit 1

# Check for Docker Compose
if ! command -v docker &> /dev/null || ! docker compose version &> /dev/null; then
    echo -e "${Red}Error: 'docker' and 'docker compose' are required. Please install them.${Color_Off}"
    exit 1
fi

COMMAND="$1"
shift

case "$COMMAND" in
    start)
        echo -e "${BBlue}Starting Frappe development server...${Color_Off}"
        docker compose exec frappe bench start
        ;;
    up)
        echo -e "${BBlue}Starting all services in the background...${Color_Off}"
        docker compose up -d
        ;;
    down)
        echo -e "${BBlue}Stopping all services...${Color_Off}"
        docker compose down "$@"
        ;;
    logs)
        echo -e "${BBlue}Following logs for all services (Ctrl+C to exit)...${Color_Off}"
        docker compose logs -f "$@"
        ;;
    shell)
        echo -e "${BBlue}Opening a shell in the Frappe container...${Color_Off}"
        docker compose exec frappe bash
        ;;
    root-shell)
        echo -e "${BBlue}Opening a ROOT shell in the Frappe container...${Color_Off}"
        docker compose exec -u root frappe bash
        ;;
    clean)
        echo -e "${Yellow}WARNING: This will stop containers and permanently delete all volumes (database, bench data).${Color_Off}"
        read -p "Are you sure? (y/n): " -n 1 -r; echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            docker compose down -v
            echo -e "${BGreen}Instance cleaned.${Color_Off}"
        else
            echo "Operation cancelled."
        fi
        ;;
    "")
        echo -e "${BBlue}Frappe Helper (fh) - V2${Color_Off}"
        echo "A simple wrapper for common development tasks."
        echo
        echo "Usage: fh <command> [args...]"
        echo
        echo -e "${BGreen}Service Management:${Color_Off}"
        echo "  up           - Start all services in detached mode (docker compose up -d)"
        echo "  down         - Stop all services (add -v to remove volumes)"
        echo "  logs [svc]   - View logs for all services or a specific one"
        echo "  clean        - Stop containers and delete all data volumes"
        echo
        echo -e "${BGreen}Development:${Color_Off}"
        echo "  start        - Start the 'bench start' development server (interactive)"
        echo "  shell        - Open a shell inside the frappe container"
        echo "  root-shell   - Open a root shell inside the frappe container"
        echo
        echo -e "${BGreen}Bench Passthrough:${Color_Off}"
        echo "  <any>        - Any other command is passed directly to 'bench'."
        echo "                 Examples:"
        echo "                 - fh migrate"
        echo "                 - fh --site dev.localhost install-app erpnext"
        echo "                 - fh get-app https://github.com/frappe/erpnext"
        echo "                 - fh update --reset"
        ;;
    *)
        # Default case: Pass any other command directly to 'bench'
        echo -e "${BBlue}Running: bench ${COMMAND} $@${Color_Off}"
        docker compose exec frappe bench "$COMMAND" "$@"
        ;;
esac