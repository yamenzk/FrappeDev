# Docker Compose configuration for Frappe Development - Generated by script

services:
  mariadb:
    image: mariadb:10.6
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
      - --skip-innodb-read-only-compressed # Needed for 10.6
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_ROOT_HOST: '%'
    volumes:
      - mariadb-data:/var/lib/mysql
    ports:
      - "3307:3306" # Host:Container - Adjust host port if needed
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p123"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-cache:
    image: redis:alpine
    ports:
      - "13000:6379" # Host:Container - Adjust host port if needed
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-queue:
    image: redis:alpine
    ports:
      - "11000:6379" # Host:Container - Adjust host port if needed
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-socketio:
    image: redis:alpine
    ports:
      - "12000:6379" # Host:Container - Adjust host port if needed
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  frappe:
    image: frappe/bench:latest
    command: sleep infinity
    user: "1000:1000" # Run as frappe user (UID 1000) for permission consistency
    environment:
      - SHELL=/bin/bash
      - CHOKIDAR_USEPOLLING=true # Helps file watching in Docker
      - FRAPPE_SITE_NAME_HEADER=X-Frappe-Site-Name # Support for multi-tenant headers if needed
    volumes:
      - ./scripts:/workspace/scripts:ro 
      - ./frappe-bench:/workspace/frappe-bench 
      - ~/.ssh:/home/frappe/.ssh:ro # Optional host SSH mount
      - nvm-data:/home/frappe/.nvm
    working_dir: /workspace/frappe-bench # Default dir when entering container via shell/exec
    ports:
      - "8000-8005:8000-8005"
      - "9000-9005:9000-9005"
      - "8080:8080"
    depends_on:
      mariadb:
        condition: service_healthy
      redis-cache:
        condition: service_healthy
      redis-queue:
        condition: service_healthy
      redis-socketio:
        condition: service_healthy

volumes:
  mariadb-data: {} # Persist MariaDB data
  nvm-data: {}